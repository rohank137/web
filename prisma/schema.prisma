generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bookmark {
  id             String  @id
  title          String
  image          String
  url            String
  rating         String
  total_chapters Int
  userId         String?
  user           user?   @relation(fields: [userId], references: [id], onDelete: Cascade, map: "Bookmark_userId_fkey")

  @@index([userId])
}

model chapter {
  id        String   @id @default(cuid())
  mangaId   String
  number    Int
  title     String
  images    Json
  createdAt DateTime @default(now())
  manga     manga    @relation(fields: [mangaId], references: [id], onDelete: Cascade, map: "Chapter_mangaId_fkey")

  @@index([mangaId], map: "Chapter_mangaId_fkey")
}

model manga {
  id          String    @id @default(cuid())
  title       String
  description String
  image       String
  type        String
  status      String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  chapters    chapter[]
}

model user {
  id            String     @id
  username      String
  email         String     @unique(map: "User_email_key")
  password      String
  bio           String?    @default("I Like Mangazuna")
  emailVerified DateTime?
  image         String?    @default("https://res.cloudinary.com/demo/image/upload/default-profile.jpg")
  role          user_role  @default(USER)
  createdAt     DateTime   @default(now())
  bookmark      bookmark[]
}

enum user_role {
  ADMIN
  USER
}
